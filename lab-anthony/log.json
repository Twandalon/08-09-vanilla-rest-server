{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:56:15.634Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:56:15.637Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:56:15.638Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T04:56:15.656Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:56:52.796Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:56:52.798Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:56:52.798Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T04:56:57.957Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T04:56:57.962Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:56:57.962Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T04:56:57.963Z"}
{"id":"0dbbe3b0-db0b-11e7-ad04-77164040c6cb","timestamp":"2017-12-07T04:56:57.964Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T04:56:57.987Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:49.316Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:59:49.318Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:59:49.319Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T04:59:49.333Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T04:59:56.804Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T04:59:56.806Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T04:59:56.806Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:00:02.009Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:00:02.014Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:00:02.015Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:00:02.015Z"}
{"id":"7b6ffef0-db0b-11e7-aa9a-29d1de77fc5b","timestamp":"2017-12-07T05:00:02.016Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:00:02.037Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:03:25.302Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:03:25.304Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:03:25.305Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:03:30.563Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:03:30.565Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:03:30.565Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:03:30.565Z"}
{"id":"f7be3350-db0b-11e7-aa9a-29d1de77fc5b","timestamp":"2017-12-07T05:03:30.565Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:03:30.592Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:26:11.894Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:26:11.895Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:26:11.895Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T05:26:11.902Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:27:12.402Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:27:12.403Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:27:12.403Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:27:17.480Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:27:17.482Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:27:17.482Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:27:17.482Z"}
{"id":"4a4074a0-db0f-11e7-a19b-8156cb40e894","timestamp":"2017-12-07T05:27:17.483Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:27:17.492Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:32:37.398Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:32:37.399Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:32:37.399Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T05:32:37.405Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:32:43.628Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:32:43.629Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:32:43.629Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:32:48.691Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:32:48.693Z"}
{"level":"info","message":"(request, response) => {\n  if(!request.body){\n    sendStatus(response, 400, 'body not found');\n    return;\n  }\n  if(!request.body.brewery){\n    sendStatus(response, 400, 'brewery not found');\n    return;\n  }\n  if(!request.body.beerName){\n    sendStatus(response, 400, 'beer name not found');\n    return;\n  }\n  if(!request.body.beerType){\n    sendStatus(response, 400, 'beer type not found');\n    return;\n  }\n  let beer = new Beer(request.body.brewery, request.body.beerName, request.body.beerType);\n  beers.push(beer);\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:32:48.693Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:32:48.694Z"}
{"id":"0fab6560-db10-11e7-9600-adabdba65933","timestamp":"2017-12-07T05:32:48.694Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
{"level":"error","message":"__SERVER_ERROR__ server is already off","timestamp":"2017-12-07T05:32:48.703Z"}
{"level":"info","message":"Adding a POST url and callback","timestamp":"2017-12-07T05:41:51.392Z"}
{"level":"info","message":"/api/beers","timestamp":"2017-12-07T05:41:51.393Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:41:51.393Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2017-12-07T05:41:51.441Z"}
{"level":"info","message":"Routing a Request","timestamp":"2017-12-07T05:41:51.455Z"}
{"level":"info","message":"Found the following handler","timestamp":"2017-12-07T05:41:51.457Z"}
{"level":"info","message":"(request, response) => {/* istanbul ignore next */cov_1aebqmmulz.f[2]++;cov_1aebqmmulz.s[16]++;\n  if (!request.body) {/* istanbul ignore next */cov_1aebqmmulz.b[0][0]++;cov_1aebqmmulz.s[17]++;\n    sendStatus(response, 400, 'body not found'); /* istanbul ignore next */cov_1aebqmmulz.s[18]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[0][1]++;}cov_1aebqmmulz.s[19]++;\n  if (!request.body.brewery) {/* istanbul ignore next */cov_1aebqmmulz.b[1][0]++;cov_1aebqmmulz.s[20]++;\n    sendStatus(response, 400, 'brewery not found'); /* istanbul ignore next */cov_1aebqmmulz.s[21]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[1][1]++;}cov_1aebqmmulz.s[22]++;\n  if (!request.body.beerName) {/* istanbul ignore next */cov_1aebqmmulz.b[2][0]++;cov_1aebqmmulz.s[23]++;\n    sendStatus(response, 400, 'beer name not found'); /* istanbul ignore next */cov_1aebqmmulz.s[24]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[2][1]++;}cov_1aebqmmulz.s[25]++;\n  if (!request.body.beerType) {/* istanbul ignore next */cov_1aebqmmulz.b[3][0]++;cov_1aebqmmulz.s[26]++;\n    sendStatus(response, 400, 'beer type not found'); /* istanbul ignore next */cov_1aebqmmulz.s[27]++;\n    return;\n  } else /* istanbul ignore next */{cov_1aebqmmulz.b[3][1]++;}\n  let beer = /* istanbul ignore next */(cov_1aebqmmulz.s[28]++, new Beer(request.body.brewery, request.body.beerName, request.body.beerType)); /* istanbul ignore next */cov_1aebqmmulz.s[29]++;\n  beers.push(beer); /* istanbul ignore next */cov_1aebqmmulz.s[30]++;\n  sendJSON(response, 200, beer);\n}","timestamp":"2017-12-07T05:41:51.457Z"}
{"level":"info","message":"Responding with a 200 code and the following data","timestamp":"2017-12-07T05:41:51.457Z"}
{"id":"532e7510-db11-11e7-bbaa-6ff04cb8f2e3","timestamp":"2017-12-07T05:41:51.457Z","brewery":"Rainier Beer","beerName":"Rainier","beerType":"lager","level":"info","message":""}
